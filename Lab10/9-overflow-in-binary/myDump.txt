
overflow_in_binary:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 20                	add    BYTE PTR [eax],ah
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 d8                	add    al,bl
 8048199:	90                   	nop
 804819a:	e4 10                	in     al,0x10
 804819c:	3b a8 2f cf 20 08    	cmp    ebp,DWORD PTR [eax+0x820cf2f]
 80481a2:	88 f7                	mov    bh,dh
 80481a4:	f1                   	icebp  
 80481a5:	4b                   	dec    ebx
 80481a6:	24 c2                	and    al,0xc2
 80481a8:	3c 1b                	cmp    al,0x1b
 80481aa:	58                   	pop    eax
 80481ab:	d1                   	.byte 0xd1

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	07                   	pop    es
 80481b1:	00 00                	add    BYTE PTR [eax],al
 80481b3:	00 01                	add    BYTE PTR [ecx],al
 80481b5:	00 00                	add    BYTE PTR [eax],al
 80481b7:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 80481bd:	20 02                	and    BYTE PTR [edx],al
 80481bf:	22 00                	and    al,BYTE PTR [eax]
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 07                	add    BYTE PTR [edi],al
 80481c5:	00 00                	add    BYTE PTR [eax],al
 80481c7:	00 38                	add    BYTE PTR [eax],bh
 80481c9:	f2                   	repnz
 80481ca:	8b                   	.byte 0x8b
 80481cb:	1c ad                	sbb    al,0xad
 80481cd:	4b                   	dec    ebx
 80481ce:	e3 c0                	jecxz  8048190 <_init-0x1a0>

Disassembly of section .dynsym:

080481d0 <.dynsym>:
	...
 80481e0:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 80481ea:	00 00                	add    BYTE PTR [eax],al
 80481ec:	12 00                	adc    al,BYTE PTR [eax]
 80481ee:	00 00                	add    BYTE PTR [eax],al
 80481f0:	26 00 00             	add    BYTE PTR es:[eax],al
	...
 80481fb:	00 12                	add    BYTE PTR [edx],dl
 80481fd:	00 00                	add    BYTE PTR [eax],al
 80481ff:	00 4c 00 00          	add    BYTE PTR [eax+eax*1+0x0],cl
	...
 804820b:	00 20                	add    BYTE PTR [eax],ah
 804820d:	00 00                	add    BYTE PTR [eax],al
 804820f:	00 21                	add    BYTE PTR [ecx],ah
	...
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 12                	add    BYTE PTR [edx],dl
 804821d:	00 00                	add    BYTE PTR [eax],al
 804821f:	00 3a                	add    BYTE PTR [edx],bh
	...
 8048229:	00 00                	add    BYTE PTR [eax],al
 804822b:	00 12                	add    BYTE PTR [edx],dl
 804822d:	00 00                	add    BYTE PTR [eax],al
 804822f:	00 32                	add    BYTE PTR [edx],dh
	...
 8048239:	00 00                	add    BYTE PTR [eax],al
 804823b:	00 12                	add    BYTE PTR [edx],dl
 804823d:	00 00                	add    BYTE PTR [eax],al
 804823f:	00 2b                	add    BYTE PTR [ebx],ch
 8048241:	00 00                	add    BYTE PTR [eax],al
 8048243:	00 28                	add    BYTE PTR [eax],ch
 8048245:	a0 04 08 04 00       	mov    al,ds:0x40804
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	11 00                	adc    DWORD PTR [eax],eax
 804824e:	1a 00                	sbb    al,BYTE PTR [eax]
 8048250:	0b 00                	or     eax,DWORD PTR [eax]
 8048252:	00 00                	add    BYTE PTR [eax],al
 8048254:	1c 86                	sbb    al,0x86
 8048256:	04 08                	add    al,0x8
 8048258:	04 00                	add    al,0x0
 804825a:	00 00                	add    BYTE PTR [eax],al
 804825c:	11 00                	adc    DWORD PTR [eax],eax
 804825e:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

08048260 <.dynstr>:
 8048260:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 8048264:	63 2e                	arpl   WORD PTR [esi],bp
 8048266:	73 6f                	jae    80482d7 <_init-0x59>
 8048268:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 804826d:	4f                   	dec    edi
 804826e:	5f                   	pop    edi
 804826f:	73 74                	jae    80482e5 <_init-0x4b>
 8048271:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048278:	64 
 8048279:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 804827c:	72 63                	jb     80482e1 <_init-0x4f>
 804827e:	70 79                	jo     80482f9 <_init-0x37>
 8048280:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 8048283:	69 74 00 70 75 74 73 	imul   esi,DWORD PTR [eax+eax*1+0x70],0x737475
 804828a:	00 
 804828b:	73 74                	jae    8048301 <_init-0x2f>
 804828d:	64 65 72 72          	fs gs jb 8048303 <_init-0x2d>
 8048291:	00 66 70             	add    BYTE PTR [esi+0x70],ah
 8048294:	72 69                	jb     80482ff <_init-0x31>
 8048296:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048297:	74 66                	je     80482ff <_init-0x31>
 8048299:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804829c:	6c                   	ins    BYTE PTR es:[edi],dx
 804829d:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482a4:	72 74                	jb     804831a <_init-0x16>
 80482a6:	5f                   	pop    edi
 80482a7:	6d                   	ins    DWORD PTR es:[edi],dx
 80482a8:	61                   	popa   
 80482a9:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [esi+0x0],0x6d675f5f
 80482b0:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482b1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482b2:	5f                   	pop    edi
 80482b3:	73 74                	jae    8048329 <_init-0x7>
 80482b5:	61                   	popa   
 80482b6:	72 74                	jb     804832c <_init-0x4>
 80482b8:	5f                   	pop    edi
 80482b9:	5f                   	pop    edi
 80482ba:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 80482bd:	49                   	dec    ecx
 80482be:	42                   	inc    edx
 80482bf:	43                   	inc    ebx
 80482c0:	5f                   	pop    edi
 80482c1:	32 2e                	xor    ch,BYTE PTR [esi]
 80482c3:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

080482c6 <.gnu.version>:
 80482c6:	00 00                	add    BYTE PTR [eax],al
 80482c8:	02 00                	add    al,BYTE PTR [eax]
 80482ca:	02 00                	add    al,BYTE PTR [eax]
 80482cc:	00 00                	add    BYTE PTR [eax],al
 80482ce:	02 00                	add    al,BYTE PTR [eax]
 80482d0:	02 00                	add    al,BYTE PTR [eax]
 80482d2:	02 00                	add    al,BYTE PTR [eax]
 80482d4:	02 00                	add    al,BYTE PTR [eax]
 80482d6:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

080482d8 <.gnu.version_r>:
 80482d8:	01 00                	add    DWORD PTR [eax],eax
 80482da:	01 00                	add    DWORD PTR [eax],eax
 80482dc:	01 00                	add    DWORD PTR [eax],eax
 80482de:	00 00                	add    BYTE PTR [eax],al
 80482e0:	10 00                	adc    BYTE PTR [eax],al
 80482e2:	00 00                	add    BYTE PTR [eax],al
 80482e4:	00 00                	add    BYTE PTR [eax],al
 80482e6:	00 00                	add    BYTE PTR [eax],al
 80482e8:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 80482eb:	0d 00 00 02 00       	or     eax,0x20000
 80482f0:	5b                   	pop    ebx
 80482f1:	00 00                	add    BYTE PTR [eax],al
 80482f3:	00 00                	add    BYTE PTR [eax],al
 80482f5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

080482f8 <.rel.dyn>:
 80482f8:	fc                   	cld    
 80482f9:	9f                   	lahf   
 80482fa:	04 08                	add    al,0x8
 80482fc:	06                   	push   es
 80482fd:	03 00                	add    eax,DWORD PTR [eax]
 80482ff:	00 28                	add    BYTE PTR [eax],ch
 8048301:	a0 04 08 05 07       	mov    al,ds:0x7050804
	...

Disassembly of section .rel.plt:

08048308 <.rel.plt>:
 8048308:	0c a0                	or     al,0xa0
 804830a:	04 08                	add    al,0x8
 804830c:	07                   	pop    es
 804830d:	01 00                	add    DWORD PTR [eax],eax
 804830f:	00 10                	add    BYTE PTR [eax],dl
 8048311:	a0 04 08 07 02       	mov    al,ds:0x2070804
 8048316:	00 00                	add    BYTE PTR [eax],al
 8048318:	14 a0                	adc    al,0xa0
 804831a:	04 08                	add    al,0x8
 804831c:	07                   	pop    es
 804831d:	04 00                	add    al,0x0
 804831f:	00 18                	add    BYTE PTR [eax],bl
 8048321:	a0 04 08 07 05       	mov    al,ds:0x5070804
 8048326:	00 00                	add    BYTE PTR [eax],al
 8048328:	1c a0                	sbb    al,0xa0
 804832a:	04 08                	add    al,0x8
 804832c:	07                   	pop    es
 804832d:	06                   	push   es
	...

Disassembly of section .init:

08048330 <_init>:
 8048330:	53                   	push   ebx
 8048331:	83 ec 08             	sub    esp,0x8
 8048334:	e8 c7 00 00 00       	call   8048400 <__x86.get_pc_thunk.bx>
 8048339:	81 c3 c7 1c 00 00    	add    ebx,0x1cc7
 804833f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048345:	85 c0                	test   eax,eax
 8048347:	74 05                	je     804834e <_init+0x1e>
 8048349:	e8 72 00 00 00       	call   80483c0 <__gmon_start__@plt>
 804834e:	83 c4 08             	add    esp,0x8
 8048351:	5b                   	pop    ebx
 8048352:	c3                   	ret    

Disassembly of section .plt:

08048360 <.plt>:
 8048360:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804836c:	00 00                	add    BYTE PTR [eax],al
	...

08048370 <strcpy@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048376:	68 00 00 00 00       	push   0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <.plt>

08048380 <puts@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048386:	68 08 00 00 00       	push   0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <.plt>

08048390 <exit@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048396:	68 10 00 00 00       	push   0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <.plt>

080483a0 <__libc_start_main@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 80483a6:	68 18 00 00 00       	push   0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <.plt>

080483b0 <fprintf@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 80483b6:	68 20 00 00 00       	push   0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <.plt>

Disassembly of section .plt.got:

080483c0 <__gmon_start__@plt>:
 80483c0:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 80483c6:	66 90                	xchg   ax,ax

Disassembly of section .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    ebp,ebp
 80483d2:	5e                   	pop    esi
 80483d3:	89 e1                	mov    ecx,esp
 80483d5:	83 e4 f0             	and    esp,0xfffffff0
 80483d8:	50                   	push   eax
 80483d9:	54                   	push   esp
 80483da:	52                   	push   edx
 80483db:	68 00 86 04 08       	push   0x8048600
 80483e0:	68 a0 85 04 08       	push   0x80485a0
 80483e5:	51                   	push   ecx
 80483e6:	56                   	push   esi
 80483e7:	68 3e 85 04 08       	push   0x804853e
 80483ec:	e8 af ff ff ff       	call   80483a0 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	66 90                	xchg   ax,ax
 80483f4:	66 90                	xchg   ax,ax
 80483f6:	66 90                	xchg   ax,ax
 80483f8:	66 90                	xchg   ax,ax
 80483fa:	66 90                	xchg   ax,ax
 80483fc:	66 90                	xchg   ax,ax
 80483fe:	66 90                	xchg   ax,ax

08048400 <__x86.get_pc_thunk.bx>:
 8048400:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048403:	c3                   	ret    
 8048404:	66 90                	xchg   ax,ax
 8048406:	66 90                	xchg   ax,ax
 8048408:	66 90                	xchg   ax,ax
 804840a:	66 90                	xchg   ax,ax
 804840c:	66 90                	xchg   ax,ax
 804840e:	66 90                	xchg   ax,ax

08048410 <deregister_tm_clones>:
 8048410:	b8 2b a0 04 08       	mov    eax,0x804a02b
 8048415:	2d 28 a0 04 08       	sub    eax,0x804a028
 804841a:	83 f8 06             	cmp    eax,0x6
 804841d:	76 1a                	jbe    8048439 <deregister_tm_clones+0x29>
 804841f:	b8 00 00 00 00       	mov    eax,0x0
 8048424:	85 c0                	test   eax,eax
 8048426:	74 11                	je     8048439 <deregister_tm_clones+0x29>
 8048428:	55                   	push   ebp
 8048429:	89 e5                	mov    ebp,esp
 804842b:	83 ec 14             	sub    esp,0x14
 804842e:	68 28 a0 04 08       	push   0x804a028
 8048433:	ff d0                	call   eax
 8048435:	83 c4 10             	add    esp,0x10
 8048438:	c9                   	leave  
 8048439:	f3 c3                	repz ret 
 804843b:	90                   	nop
 804843c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048440 <register_tm_clones>:
 8048440:	b8 28 a0 04 08       	mov    eax,0x804a028
 8048445:	2d 28 a0 04 08       	sub    eax,0x804a028
 804844a:	c1 f8 02             	sar    eax,0x2
 804844d:	89 c2                	mov    edx,eax
 804844f:	c1 ea 1f             	shr    edx,0x1f
 8048452:	01 d0                	add    eax,edx
 8048454:	d1 f8                	sar    eax,1
 8048456:	74 1b                	je     8048473 <register_tm_clones+0x33>
 8048458:	ba 00 00 00 00       	mov    edx,0x0
 804845d:	85 d2                	test   edx,edx
 804845f:	74 12                	je     8048473 <register_tm_clones+0x33>
 8048461:	55                   	push   ebp
 8048462:	89 e5                	mov    ebp,esp
 8048464:	83 ec 10             	sub    esp,0x10
 8048467:	50                   	push   eax
 8048468:	68 28 a0 04 08       	push   0x804a028
 804846d:	ff d2                	call   edx
 804846f:	83 c4 10             	add    esp,0x10
 8048472:	c9                   	leave  
 8048473:	f3 c3                	repz ret 
 8048475:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048479:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048480 <__do_global_dtors_aux>:
 8048480:	80 3d 2c a0 04 08 00 	cmp    BYTE PTR ds:0x804a02c,0x0
 8048487:	75 13                	jne    804849c <__do_global_dtors_aux+0x1c>
 8048489:	55                   	push   ebp
 804848a:	89 e5                	mov    ebp,esp
 804848c:	83 ec 08             	sub    esp,0x8
 804848f:	e8 7c ff ff ff       	call   8048410 <deregister_tm_clones>
 8048494:	c6 05 2c a0 04 08 01 	mov    BYTE PTR ds:0x804a02c,0x1
 804849b:	c9                   	leave  
 804849c:	f3 c3                	repz ret 
 804849e:	66 90                	xchg   ax,ax

080484a0 <frame_dummy>:
 80484a0:	b8 10 9f 04 08       	mov    eax,0x8049f10
 80484a5:	8b 10                	mov    edx,DWORD PTR [eax]
 80484a7:	85 d2                	test   edx,edx
 80484a9:	75 05                	jne    80484b0 <frame_dummy+0x10>
 80484ab:	eb 93                	jmp    8048440 <register_tm_clones>
 80484ad:	8d 76 00             	lea    esi,[esi+0x0]
 80484b0:	ba 00 00 00 00       	mov    edx,0x0
 80484b5:	85 d2                	test   edx,edx
 80484b7:	74 f2                	je     80484ab <frame_dummy+0xb>
 80484b9:	55                   	push   ebp
 80484ba:	89 e5                	mov    ebp,esp
 80484bc:	83 ec 14             	sub    esp,0x14
 80484bf:	50                   	push   eax
 80484c0:	ff d2                	call   edx
 80484c2:	83 c4 10             	add    esp,0x10
 80484c5:	c9                   	leave  
 80484c6:	e9 75 ff ff ff       	jmp    8048440 <register_tm_clones>

080484cb <success>:
 80484cb:	55                   	push   ebp
 80484cc:	89 e5                	mov    ebp,esp
 80484ce:	83 ec 08             	sub    esp,0x8
 80484d1:	83 ec 0c             	sub    esp,0xc
 80484d4:	68 20 86 04 08       	push   0x8048620
 80484d9:	e8 a2 fe ff ff       	call   8048380 <puts@plt>
 80484de:	83 c4 10             	add    esp,0x10
 80484e1:	90                   	nop
 80484e2:	c9                   	leave  
 80484e3:	c3                   	ret    

080484e4 <fail>:
 80484e4:	55                   	push   ebp
 80484e5:	89 e5                	mov    ebp,esp
 80484e7:	83 ec 08             	sub    esp,0x8
 80484ea:	83 ec 0c             	sub    esp,0xc
 80484ed:	68 2f 86 04 08       	push   0x804862f
 80484f2:	e8 89 fe ff ff       	call   8048380 <puts@plt>
 80484f7:	83 c4 10             	add    esp,0x10
 80484fa:	90                   	nop
 80484fb:	c9                   	leave  
 80484fc:	c3                   	ret    

080484fd <check_string>:
 80484fd:	55                   	push   ebp
 80484fe:	89 e5                	mov    ebp,esp
 8048500:	83 ec 38             	sub    esp,0x38
 8048503:	c7 45 f4 78 56 34 12 	mov    DWORD PTR [ebp-0xc],0x12345678
 804850a:	83 ec 08             	sub    esp,0x8
 804850d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 8048510:	8d 45 d4             	lea    eax,[ebp-0x2c]
 8048513:	50                   	push   eax
 8048514:	e8 57 fe ff ff       	call   8048370 <strcpy@plt>
 8048519:	83 c4 10             	add    esp,0x10
 804851c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804851f:	0f b6 40 01          	movzx  eax,BYTE PTR [eax+0x1]
 8048523:	88 45 e3             	mov    BYTE PTR [ebp-0x1d],al
 8048526:	81 7d f4 50 52 30 4e 	cmp    DWORD PTR [ebp-0xc],0x4e305250
 804852d:	75 07                	jne    8048536 <check_string+0x39>
 804852f:	e8 97 ff ff ff       	call   80484cb <success>
 8048534:	eb 05                	jmp    804853b <check_string+0x3e>
 8048536:	e8 a9 ff ff ff       	call   80484e4 <fail>
 804853b:	90                   	nop
 804853c:	c9                   	leave  
 804853d:	c3                   	ret    

0804853e <main>:
 804853e:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8048542:	83 e4 f0             	and    esp,0xfffffff0
 8048545:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 8048548:	55                   	push   ebp
 8048549:	89 e5                	mov    ebp,esp
 804854b:	51                   	push   ecx
 804854c:	83 ec 04             	sub    esp,0x4
 804854f:	89 c8                	mov    eax,ecx
 8048551:	83 38 02             	cmp    DWORD PTR [eax],0x2
 8048554:	74 26                	je     804857c <main+0x3e>
 8048556:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
 8048559:	8b 10                	mov    edx,DWORD PTR [eax]
 804855b:	a1 28 a0 04 08       	mov    eax,ds:0x804a028
 8048560:	83 ec 04             	sub    esp,0x4
 8048563:	52                   	push   edx
 8048564:	68 3d 86 04 08       	push   0x804863d
 8048569:	50                   	push   eax
 804856a:	e8 41 fe ff ff       	call   80483b0 <fprintf@plt>
 804856f:	83 c4 10             	add    esp,0x10
 8048572:	83 ec 0c             	sub    esp,0xc
 8048575:	6a 01                	push   0x1
 8048577:	e8 14 fe ff ff       	call   8048390 <exit@plt>
 804857c:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
 804857f:	83 c0 04             	add    eax,0x4
 8048582:	8b 00                	mov    eax,DWORD PTR [eax]
 8048584:	83 ec 0c             	sub    esp,0xc
 8048587:	50                   	push   eax
 8048588:	e8 70 ff ff ff       	call   80484fd <check_string>
 804858d:	83 c4 10             	add    esp,0x10
 8048590:	b8 00 00 00 00       	mov    eax,0x0
 8048595:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 8048598:	c9                   	leave  
 8048599:	8d 61 fc             	lea    esp,[ecx-0x4]
 804859c:	c3                   	ret    
 804859d:	66 90                	xchg   ax,ax
 804859f:	90                   	nop

080485a0 <__libc_csu_init>:
 80485a0:	55                   	push   ebp
 80485a1:	57                   	push   edi
 80485a2:	56                   	push   esi
 80485a3:	53                   	push   ebx
 80485a4:	e8 57 fe ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 80485a9:	81 c3 57 1a 00 00    	add    ebx,0x1a57
 80485af:	83 ec 0c             	sub    esp,0xc
 80485b2:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 80485b6:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80485bc:	e8 6f fd ff ff       	call   8048330 <_init>
 80485c1:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80485c7:	29 c6                	sub    esi,eax
 80485c9:	c1 fe 02             	sar    esi,0x2
 80485cc:	85 f6                	test   esi,esi
 80485ce:	74 25                	je     80485f5 <__libc_csu_init+0x55>
 80485d0:	31 ff                	xor    edi,edi
 80485d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80485d8:	83 ec 04             	sub    esp,0x4
 80485db:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80485df:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80485e3:	55                   	push   ebp
 80485e4:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 80485eb:	83 c7 01             	add    edi,0x1
 80485ee:	83 c4 10             	add    esp,0x10
 80485f1:	39 f7                	cmp    edi,esi
 80485f3:	75 e3                	jne    80485d8 <__libc_csu_init+0x38>
 80485f5:	83 c4 0c             	add    esp,0xc
 80485f8:	5b                   	pop    ebx
 80485f9:	5e                   	pop    esi
 80485fa:	5f                   	pop    edi
 80485fb:	5d                   	pop    ebp
 80485fc:	c3                   	ret    
 80485fd:	8d 76 00             	lea    esi,[esi+0x0]

08048600 <__libc_csu_fini>:
 8048600:	f3 c3                	repz ret 

Disassembly of section .fini:

08048604 <_fini>:
 8048604:	53                   	push   ebx
 8048605:	83 ec 08             	sub    esp,0x8
 8048608:	e8 f3 fd ff ff       	call   8048400 <__x86.get_pc_thunk.bx>
 804860d:	81 c3 f3 19 00 00    	add    ebx,0x19f3
 8048613:	83 c4 08             	add    esp,0x8
 8048616:	5b                   	pop    ebx
 8048617:	c3                   	ret    

Disassembly of section .rodata:

08048618 <_fp_hw>:
 8048618:	03 00                	add    eax,DWORD PTR [eax]
	...

0804861c <_IO_stdin_used>:
 804861c:	01 00                	add    DWORD PTR [eax],eax
 804861e:	02 00                	add    al,BYTE PTR [eax]
 8048620:	47                   	inc    edi
 8048621:	72 65                	jb     8048688 <__GNU_EH_FRAME_HDR+0x34>
 8048623:	61                   	popa   
 8048624:	74 20                	je     8048646 <_IO_stdin_used+0x2a>
 8048626:	73 75                	jae    804869d <__GNU_EH_FRAME_HDR+0x49>
 8048628:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
 804862b:	73 73                	jae    80486a0 <__GNU_EH_FRAME_HDR+0x4c>
 804862d:	21 00                	and    DWORD PTR [eax],eax
 804862f:	45                   	inc    ebp
 8048630:	70 69                	jo     804869b <__GNU_EH_FRAME_HDR+0x47>
 8048632:	63 20                	arpl   WORD PTR [eax],sp
 8048634:	66 61                	popaw  
 8048636:	69 6c 75 72 65 21 00 	imul   ebp,DWORD PTR [ebp+esi*2+0x72],0x55002165
 804863d:	55 
 804863e:	73 61                	jae    80486a1 <__GNU_EH_FRAME_HDR+0x4d>
 8048640:	67 65 3a 20          	cmp    ah,BYTE PTR gs:[bx+si]
 8048644:	25 73 20 3c 73       	and    eax,0x733c2073
 8048649:	74 72                	je     80486bd <__GNU_EH_FRAME_HDR+0x69>
 804864b:	69                   	.byte 0x69
 804864c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804864d:	67 3e 0a 00          	or     al,BYTE PTR ds:[bx+si]

Disassembly of section .eh_frame_hdr:

08048654 <__GNU_EH_FRAME_HDR>:
 8048654:	01 1b                	add    DWORD PTR [ebx],ebx
 8048656:	03 3b                	add    edi,DWORD PTR [ebx]
 8048658:	40                   	inc    eax
 8048659:	00 00                	add    BYTE PTR [eax],al
 804865b:	00 07                	add    BYTE PTR [edi],al
 804865d:	00 00                	add    BYTE PTR [eax],al
 804865f:	00 0c fd ff ff 5c 00 	add    BYTE PTR [edi*8+0x5cffff],cl
 8048666:	00 00                	add    BYTE PTR [eax],al
 8048668:	77 fe                	ja     8048668 <__GNU_EH_FRAME_HDR+0x14>
 804866a:	ff                   	(bad)  
 804866b:	ff 80 00 00 00 90    	inc    DWORD PTR [eax-0x70000000]
 8048671:	fe                   	(bad)  
 8048672:	ff                   	(bad)  
 8048673:	ff a0 00 00 00 a9    	jmp    DWORD PTR [eax-0x57000000]
 8048679:	fe                   	(bad)  
 804867a:	ff                   	(bad)  
 804867b:	ff c0                	inc    eax
 804867d:	00 00                	add    BYTE PTR [eax],al
 804867f:	00 ea                	add    dl,ch
 8048681:	fe                   	(bad)  
 8048682:	ff                   	(bad)  
 8048683:	ff e0                	jmp    eax
 8048685:	00 00                	add    BYTE PTR [eax],al
 8048687:	00 4c ff ff          	add    BYTE PTR [edi+edi*8-0x1],cl
 804868b:	ff 0c 01             	dec    DWORD PTR [ecx+eax*1]
 804868e:	00 00                	add    BYTE PTR [eax],al
 8048690:	ac                   	lods   al,BYTE PTR ds:[esi]
 8048691:	ff                   	(bad)  
 8048692:	ff                   	(bad)  
 8048693:	ff 58 01             	call   FWORD PTR [eax+0x1]
	...

Disassembly of section .eh_frame:

08048698 <__FRAME_END__-0x128>:
 8048698:	14 00                	adc    al,0x0
 804869a:	00 00                	add    BYTE PTR [eax],al
 804869c:	00 00                	add    BYTE PTR [eax],al
 804869e:	00 00                	add    BYTE PTR [eax],al
 80486a0:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 80486a3:	00 01                	add    BYTE PTR [ecx],al
 80486a5:	7c 08                	jl     80486af <__GNU_EH_FRAME_HDR+0x5b>
 80486a7:	01 1b                	add    DWORD PTR [ebx],ebx
 80486a9:	0c 04                	or     al,0x4
 80486ab:	04 88                	add    al,0x88
 80486ad:	01 00                	add    DWORD PTR [eax],eax
 80486af:	00 20                	add    BYTE PTR [eax],ah
 80486b1:	00 00                	add    BYTE PTR [eax],al
 80486b3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80486b6:	00 00                	add    BYTE PTR [eax],al
 80486b8:	a8 fc                	test   al,0xfc
 80486ba:	ff                   	(bad)  
 80486bb:	ff 60 00             	jmp    DWORD PTR [eax+0x0]
 80486be:	00 00                	add    BYTE PTR [eax],al
 80486c0:	00 0e                	add    BYTE PTR [esi],cl
 80486c2:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 80486c5:	0c 4a                	or     al,0x4a
 80486c7:	0f 0b                	ud2    
 80486c9:	74 04                	je     80486cf <__GNU_EH_FRAME_HDR+0x7b>
 80486cb:	78 00                	js     80486cd <__GNU_EH_FRAME_HDR+0x79>
 80486cd:	3f                   	aas    
 80486ce:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 80486d0:	2a 32                	sub    dh,BYTE PTR [edx]
 80486d2:	24 22                	and    al,0x22
 80486d4:	1c 00                	sbb    al,0x0
 80486d6:	00 00                	add    BYTE PTR [eax],al
 80486d8:	40                   	inc    eax
 80486d9:	00 00                	add    BYTE PTR [eax],al
 80486db:	00 ef                	add    bh,ch
 80486dd:	fd                   	std    
 80486de:	ff                   	(bad)  
 80486df:	ff 19                	call   FWORD PTR [ecx]
 80486e1:	00 00                	add    BYTE PTR [eax],al
 80486e3:	00 00                	add    BYTE PTR [eax],al
 80486e5:	41                   	inc    ecx
 80486e6:	0e                   	push   cs
 80486e7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80486ed:	55                   	push   ebp
 80486ee:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80486f1:	04 00                	add    al,0x0
 80486f3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80486f6:	00 00                	add    BYTE PTR [eax],al
 80486f8:	60                   	pusha  
 80486f9:	00 00                	add    BYTE PTR [eax],al
 80486fb:	00 e8                	add    al,ch
 80486fd:	fd                   	std    
 80486fe:	ff                   	(bad)  
 80486ff:	ff 19                	call   FWORD PTR [ecx]
 8048701:	00 00                	add    BYTE PTR [eax],al
 8048703:	00 00                	add    BYTE PTR [eax],al
 8048705:	41                   	inc    ecx
 8048706:	0e                   	push   cs
 8048707:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804870d:	55                   	push   ebp
 804870e:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 8048711:	04 00                	add    al,0x0
 8048713:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048716:	00 00                	add    BYTE PTR [eax],al
 8048718:	80 00 00             	add    BYTE PTR [eax],0x0
 804871b:	00 e1                	add    cl,ah
 804871d:	fd                   	std    
 804871e:	ff                   	(bad)  
 804871f:	ff 41 00             	inc    DWORD PTR [ecx+0x0]
 8048722:	00 00                	add    BYTE PTR [eax],al
 8048724:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8048727:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804872d:	7d c5                	jge    80486f4 <__GNU_EH_FRAME_HDR+0xa0>
 804872f:	0c 04                	or     al,0x4
 8048731:	04 00                	add    al,0x0
 8048733:	00 28                	add    BYTE PTR [eax],ch
 8048735:	00 00                	add    BYTE PTR [eax],al
 8048737:	00 a0 00 00 00 02    	add    BYTE PTR [eax+0x2000000],ah
 804873d:	fe                   	(bad)  
 804873e:	ff                   	(bad)  
 804873f:	ff 5f 00             	call   FWORD PTR [edi+0x0]
 8048742:	00 00                	add    BYTE PTR [eax],al
 8048744:	00 44 0c 01          	add    BYTE PTR [esp+ecx*1+0x1],al
 8048748:	00 47 10             	add    BYTE PTR [edi+0x10],al
 804874b:	05 02 75 00 43       	add    eax,0x43007502
 8048750:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 8048754:	06                   	push   es
 8048755:	02 4c 0c 01          	add    cl,BYTE PTR [esp+ecx*1+0x1]
 8048759:	00 41 c5             	add    BYTE PTR [ecx-0x3b],al
 804875c:	43                   	inc    ebx
 804875d:	0c 04                	or     al,0x4
 804875f:	04 48                	add    al,0x48
 8048761:	00 00                	add    BYTE PTR [eax],al
 8048763:	00 cc                	add    ah,cl
 8048765:	00 00                	add    BYTE PTR [eax],al
 8048767:	00 38                	add    BYTE PTR [eax],bh
 8048769:	fe                   	(bad)  
 804876a:	ff                   	(bad)  
 804876b:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 804876e:	00 00                	add    BYTE PTR [eax],al
 8048770:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8048773:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 8048779:	87 03                	xchg   DWORD PTR [ebx],eax
 804877b:	41                   	inc    ecx
 804877c:	0e                   	push   cs
 804877d:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 8048783:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
 804878a:	24 44                	and    al,0x44
 804878c:	0e                   	push   cs
 804878d:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 8048791:	41                   	inc    ecx
 8048792:	0e                   	push   cs
 8048793:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 8048796:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 8048799:	14 41                	adc    al,0x41
 804879b:	c3                   	ret    
 804879c:	0e                   	push   cs
 804879d:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 80487a0:	0e                   	push   cs
 80487a1:	0c 41                	or     al,0x41
 80487a3:	c7                   	(bad)  
 80487a4:	0e                   	push   cs
 80487a5:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 80487a8:	0e                   	push   cs
 80487a9:	04 00                	add    al,0x0
 80487ab:	00 10                	add    BYTE PTR [eax],dl
 80487ad:	00 00                	add    BYTE PTR [eax],al
 80487af:	00 18                	add    BYTE PTR [eax],bl
 80487b1:	01 00                	add    DWORD PTR [eax],eax
 80487b3:	00 4c fe ff          	add    BYTE PTR [esi+edi*8-0x1],cl
 80487b7:	ff 02                	inc    DWORD PTR [edx]
 80487b9:	00 00                	add    BYTE PTR [eax],al
 80487bb:	00 00                	add    BYTE PTR [eax],al
 80487bd:	00 00                	add    BYTE PTR [eax],al
	...

080487c0 <__FRAME_END__>:
 80487c0:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	a0                   	.byte 0xa0
 8049f09:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	80                   	.byte 0x80
 8049f0d:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    DWORD PTR [eax],eax
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	01 00                	add    DWORD PTR [eax],eax
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	0c 00                	or     al,0x0
 8049f1e:	00 00                	add    BYTE PTR [eax],al
 8049f20:	30 83 04 08 0d 00    	xor    BYTE PTR [ebx+0xd0804],al
 8049f26:	00 00                	add    BYTE PTR [eax],al
 8049f28:	04 86                	add    al,0x86
 8049f2a:	04 08                	add    al,0x8
 8049f2c:	19 00                	sbb    DWORD PTR [eax],eax
 8049f2e:	00 00                	add    BYTE PTR [eax],al
 8049f30:	08 9f 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bl
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	04 00                	add    al,0x0
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3e:	00 00                	add    BYTE PTR [eax],al
 8049f40:	0c 9f                	or     al,0x9f
 8049f42:	04 08                	add    al,0x8
 8049f44:	1c 00                	sbb    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	04 00                	add    al,0x0
 8049f4a:	00 00                	add    BYTE PTR [eax],al
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f51:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f58:	60                   	pusha  
 8049f59:	82 04 08 06          	add    BYTE PTR [eax+ecx*1],0x6
 8049f5d:	00 00                	add    BYTE PTR [eax],al
 8049f5f:	00 d0                	add    al,dl
 8049f61:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f68:	65 00 00             	add    BYTE PTR gs:[eax],al
 8049f6b:	00 0b                	add    BYTE PTR [ebx],cl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 10                	add    BYTE PTR [eax],dl
 8049f71:	00 00                	add    BYTE PTR [eax],al
 8049f73:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 03                	add    BYTE PTR [ebx],al
 8049f7d:	00 00                	add    BYTE PTR [eax],al
 8049f7f:	00 00                	add    BYTE PTR [eax],al
 8049f81:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f86:	00 00                	add    BYTE PTR [eax],al
 8049f88:	28 00                	sub    BYTE PTR [eax],al
 8049f8a:	00 00                	add    BYTE PTR [eax],al
 8049f8c:	14 00                	adc    al,0x0
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	11 00                	adc    DWORD PTR [eax],eax
 8049f92:	00 00                	add    BYTE PTR [eax],al
 8049f94:	17                   	pop    ss
 8049f95:	00 00                	add    BYTE PTR [eax],al
 8049f97:	00 08                	add    BYTE PTR [eax],cl
 8049f99:	83 04 08 11          	add    DWORD PTR [eax+ecx*1],0x11
 8049f9d:	00 00                	add    BYTE PTR [eax],al
 8049f9f:	00 f8                	add    al,bh
 8049fa1:	82 04 08 12          	add    BYTE PTR [eax+ecx*1],0x12
 8049fa5:	00 00                	add    BYTE PTR [eax],al
 8049fa7:	00 10                	add    BYTE PTR [eax],dl
 8049fa9:	00 00                	add    BYTE PTR [eax],al
 8049fab:	00 13                	add    BYTE PTR [ebx],dl
 8049fad:	00 00                	add    BYTE PTR [eax],al
 8049faf:	00 08                	add    BYTE PTR [eax],cl
 8049fb1:	00 00                	add    BYTE PTR [eax],al
 8049fb3:	00 fe                	add    dh,bh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f d8             	jmp    FWORD PTR [edi-0x28]
 8049fb9:	82 04 08 ff          	add    BYTE PTR [eax+ecx*1],0xff
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fc1:	00 00                	add    BYTE PTR [eax],al
 8049fc3:	00 f0                	add    al,dh
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f c6             	jmp    FWORD PTR [edi-0x3a]
 8049fc9:	82 04 08 00          	add    BYTE PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    al,0x9f
 804a002:	04 08                	add    al,0x8
	...
 804a00c:	76 83                	jbe    8049f91 <_DYNAMIC+0x7d>
 804a00e:	04 08                	add    al,0x8
 804a010:	86 83 04 08 96 83    	xchg   BYTE PTR [ebx-0x7c69f7fc],al
 804a016:	04 08                	add    al,0x8
 804a018:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 804a019:	83 04 08 b6          	add    DWORD PTR [eax+ecx*1],0xffffffb6
 804a01d:	83                   	.byte 0x83
 804a01e:	04 08                	add    al,0x8

Disassembly of section .data:

0804a020 <__data_start>:
 804a020:	00 00                	add    BYTE PTR [eax],al
	...

0804a024 <__dso_handle>:
 804a024:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804a028 <stderr@@GLIBC_2.0>:
 804a028:	00 00                	add    BYTE PTR [eax],al
	...

0804a02c <completed.7200>:
 804a02c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x80482b8>
   a:	74 75                	je     81 <_init-0x80482af>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR ds:0x302e342e,dh
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[esi]
  18:	74 75                	je     8f <_init-0x80482a1>
  1a:	31 7e 31             	xor    DWORD PTR [esi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[esi+ebp*1],dh
  22:	35 29 20 35 2e       	xor    eax,0x2e352029
  27:	34 2e                	xor    al,0x2e
  29:	30 20                	xor    BYTE PTR [eax],ah
  2b:	32 30                	xor    dh,BYTE PTR [eax]
  2d:	31 36                	xor    DWORD PTR [esi],esi
  2f:	30 36                	xor    BYTE PTR [esi],dh
  31:	30 39                	xor    BYTE PTR [ecx],bh
	...
